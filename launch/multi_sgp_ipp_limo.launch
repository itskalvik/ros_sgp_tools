<launch>
    <arg name="world_name" default="$(find limo_gazebo_sim)/worlds/empty.world"/>

    <arg name="robot_0"  default="limo_0"/>
    <arg name="robot_0_x_pos" default=" 1.0"/>
    <arg name="robot_0_y_pos" default=" 0.0"/>
    <arg name="robot_0_z_pos" default=" 0.0"/>
    <arg name="robot_0_yaw"   default=" 0.0"/>

    <arg name="robot_1"  default="limo_1"/>
    <arg name="robot_1_x_pos" default="-1.0"/>
    <arg name="robot_1_y_pos" default=" 0.0"/>
    <arg name="robot_1_z_pos" default=" 0.0"/>
    <arg name="robot_1_yaw"   default=" 0.0"/>

    <arg name="robot_2"  default="limo_2"/>
    <arg name="robot_2_x_pos" default=" 0.0"/>
    <arg name="robot_2_y_pos" default="-1.0"/>
    <arg name="robot_2_z_pos" default=" 0.0"/>
    <arg name="robot_2_yaw"   default=" 0.0"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <!-- Start the Offline Informative Path Planner -->
    <param name="num_robots" value="3" />
    <node pkg="ros_sgp_ipp" name="offlineIPP" type="offlineIPP.py" output="screen" />

    <group ns = "$(arg robot_0)">
        <!-- Spawn Gazebo model -->
        <param name="robot_description" command="$(find xacro)/xacro '$(find limo_description)/urdf/limo_four_diff.xacro'
            robot_namespace:=$(arg robot_0)" />

        <!-- initial pose -->
        <arg name="x" default="0.0"/>
        <arg name="y" default="0.0"/>
        <arg name="z" default="0.0"/>
        <arg name="yaw" default="0.0"/>
        <node name="spawn_limo_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg robot_0_x_pos)
                -y $(arg robot_0_y_pos)
                -z $(arg robot_0_z_pos)
                -Y $(arg robot_0_yaw)
                -unpause
                -urdf
                -param robot_description
                -model 'limo$(arg robot_0)'" />

        <!-- Load joint controller configurations from YAML file to parameter server -->
        <rosparam file="$(find limo_gazebo_sim)/config/limo_four_diff_control.yaml" command="load"/>

        <!-- load the controllers -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner"
            respawn="false" output="screen" args="limo_state_controller "/>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
            
        <!-- Map Gazebo's robot pose data to match Vicon's robot pose data format -->
        <node pkg="ros_sgp_ipp" name="gazebo_pose_publisher" type="gazebo_pose_publisher.py" output="screen" />

        <!-- Start the Online Informative Path Planner -->
        <node pkg="ros_sgp_ipp" name="onlineIPP" type="onlineIPP.py" output="screen" />

        <!-- Start the trajectory planner -->
        <node pkg="ros_sgp_ipp" name="trajectory_planner" type="trajectory_planner.py" output="screen" />

        <!-- Load the data publisher node -->
        <node pkg="ros_sgp_ipp" name="data_publisher" type="data_publisher.py" output="screen" />
    </group>

    <group ns = "$(arg robot_1)">
        <!-- Spawn Gazebo model -->
        <param name="robot_description" command="$(find xacro)/xacro '$(find limo_description)/urdf/limo_four_diff.xacro'
            robot_namespace:=$(arg robot_1)" />

        <!-- initial pose -->
        <arg name="x" default="0.0"/>
        <arg name="y" default="0.0"/>
        <arg name="z" default="0.0"/>
        <arg name="yaw" default="0.0"/>
        <node name="spawn_limo_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg robot_1_x_pos)
                -y $(arg robot_1_y_pos)
                -z $(arg robot_1_z_pos)
                -Y $(arg robot_1_yaw)
                -unpause
                -urdf
                -param robot_description
                -model 'limo$(arg robot_1)'" />

        <!-- Load joint controller configurations from YAML file to parameter server -->
        <rosparam file="$(find limo_gazebo_sim)/config/limo_four_diff_control.yaml" command="load"/>

        <!-- load the controllers -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner"
            respawn="false" output="screen" args="limo_state_controller "/>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
            
        <!-- Map Gazebo's robot pose data to match Vicon's robot pose data format -->
        <node pkg="ros_sgp_ipp" name="gazebo_pose_publisher" type="gazebo_pose_publisher.py" output="screen" />

        <!-- Start the Online Informative Path Planner -->
        <node pkg="ros_sgp_ipp" name="onlineIPP" type="onlineIPP.py" output="screen" />

        <!-- Start the trajectory planner -->
        <node pkg="ros_sgp_ipp" name="trajectory_planner" type="trajectory_planner.py" output="screen" />

        <!-- Load the data publisher node -->
        <node pkg="ros_sgp_ipp" name="data_publisher" type="data_publisher.py" output="screen" />
    </group>

    <group ns = "$(arg robot_2)">
        <!-- Spawn Gazebo model -->
        <param name="robot_description" command="$(find xacro)/xacro '$(find limo_description)/urdf/limo_four_diff.xacro'
            robot_namespace:=$(arg robot_2)" />

        <!-- initial pose -->
        <arg name="x" default="0.0"/>
        <arg name="y" default="0.0"/>
        <arg name="z" default="0.0"/>
        <arg name="yaw" default="0.0"/>
        <node name="spawn_limo_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg robot_2_x_pos)
                -y $(arg robot_2_y_pos)
                -z $(arg robot_2_z_pos)
                -Y $(arg robot_2_yaw)
                -unpause
                -urdf
                -param robot_description
                -model 'limo$(arg robot_2)'" />

        <!-- Load joint controller configurations from YAML file to parameter server -->
        <rosparam file="$(find limo_gazebo_sim)/config/limo_four_diff_control.yaml" command="load"/>

        <!-- load the controllers -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner"
            respawn="false" output="screen" args="limo_state_controller "/>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
            
        <!-- Map Gazebo's robot pose data to match Vicon's robot pose data format -->
        <node pkg="ros_sgp_ipp" name="gazebo_pose_publisher" type="gazebo_pose_publisher.py" output="screen" />

        <!-- Start the Online Informative Path Planner -->
        <node pkg="ros_sgp_ipp" name="onlineIPP" type="onlineIPP.py" output="screen" />

        <!-- Start the trajectory planner -->
        <node pkg="ros_sgp_ipp" name="trajectory_planner" type="trajectory_planner.py" output="screen" />

        <!-- Load the data publisher node -->
        <node pkg="ros_sgp_ipp" name="data_publisher" type="data_publisher.py" output="screen" />
    </group>

</launch>
