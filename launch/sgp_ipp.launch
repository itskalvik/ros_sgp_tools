<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="first_tb3"  default="tb3_0"/>

  <arg name="first_tb3_x_pos" default=" 0.0"/>
  <arg name="first_tb3_y_pos" default=" 0.0"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" 0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>  

  <!-- Start the Offline Informative Path Planner -->
  <param name="num_robots" value="1" />
  <node pkg="ros_sgp_ipp" name="offlineIPP" type="offlineIPP.py" output="screen" />

  <group ns = "$(arg first_tb3)">
    <!-- Spawn Gazebo model -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg first_tb3)" />
    </node>
    
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param robot_description" />

    <!-- Map Gazebo's robot pose data to match Vicon's robot pose data format -->
    <node pkg="ros_sgp_ipp" name="gazebo_pose_publisher" type="gazebo_pose_publisher.py" output="screen" />

    <!-- Start the Online Informative Path Planner -->
    <node pkg="ros_sgp_ipp" name="onlineIPP" type="onlineIPP.py" output="screen" />

    <!-- Start the trajectory planner -->
    <node pkg="ros_sgp_ipp" name="trajectory_planner" type="trajectory_planner.py" output="screen" />
  </group>

</launch>
